<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="Axis4" Id="{e90fab8b-17fd-4854-b967-5c5cb76b9c2b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Axis4
VAR
	
	sAxisDescription						:STRING	:= 'Axis 4 - AX5203-B - AM8111-0F21';	

(* Axis - basic functions *)
	fbAxis									:FB_AxisAX5xxx;
	fMoveAbsPosition						:LREAL;				(* Target position *)
	fMoveAbsVelocity						:LREAL	:= 500.0;	(* Target speed axis 3 max. 18000.0 Degree/s *)
	bStartMoveAbs							:BOOL;
	bMoveAbsBusy							:BOOL;
	bMoveAbsDone							:BOOL;
	bAxisErr								:BOOL;
	nAxisErrId								:DWORD;
	bReset									:BOOL;
	bStop									:BOOL;
	bStopAxisDone							:BOOL;
	bStopAxisBusy							:BOOL;
	bRevSeqStart							:BOOL;
	bStartparameterSet						:BOOL;
	
(* Test - change target position - Axis 4 *)
	bTestChangeTargetPos					:BOOL;				(* Test - change target position *)
	bMaxPositionReached						:BOOL;
		
(* Couple Axis 4 on Axis 5 (Handwheel) *)
	fbGearIn								:MC_GearIn;
	bGearInDone								:BOOL;
	bAxisCoupled							:BOOL;

(* Uncouple Axis 4 *)
	fbGearOut								:MC_GearOut;
	bGearOutDone							:BOOL;
	
END_VAR
(* End *)]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Axis 4 *)

(* Axis - basic functions  *)	

	IF NOT bStartparameterSet
	THEN
		(* Startup Parameter reversing sequence *)
		fbAxis.fRevSeqTargetPos1	:= 7200.0;
		fbAxis.fRevSeqTargetVelo1	:= 9000.0;
		fbAxis.fRevSeqTargetPos2	:= 0.0;
		fbAxis.fRevSeqTargetVelo2	:= 5000.0;
		fbAxis.nRevSeqIdleTime		:= 600;
		bStartparameterSet			:=TRUE;
	END_IF
		
	fbAxis(
		bPowerEnable		:= 	bSwitchS15,
		fPowerOverride		:= 	F_Scaling(aOsAnalogInR11[0], 100.0, 32767.0),
		bMoveAbsExecute		:= 	(bStartMoveAbs OR bSwitchS16) AND NOT stAxis4.Status.Coupled,
		fMoveAbsPosition	:= 	fMoveAbsPosition,
		fMoveAbsVelocity	:= 	fMoveAbsVelocity,
		bReset				:= 	bReset OR bSwitchS21,
		bStopAxis			:= 	bStop,
		bRevSeqStart		:=  (bSwitchS20 OR bRevSeqStart) AND fbAxis.bPowerStatus, 
		stAxis				:= 	stAxis4,
		bPowerStatus		=> 	bLedH15,
		bMoveAbsDone		=> 	bMoveAbsDone,
		bMoveAbsBusy		=> 	bMoveAbsBusy,
		bAxisErr			=> 	bAxisErr,
		nAxisErrId			=> 	nAxisErrId,
		bStopAxisDone		=> 	bStopAxisDone,
		bStopAxisBusy		=> 	bStopAxisBusy);

(* Test - change target position - Axis *)
	IF bTestChangeTargetPos
		AND (fMoveAbsPosition <= stAxis4.NcToPlc.ActPos)
			AND NOT bMaxPositionReached
	THEN
		fMoveAbsPosition := fMoveAbsPosition + 180.0;
	ELSE
		IF bTestChangeTargetPos
			AND (fMoveAbsPosition >= 3600.0)
		THEN
			fMoveAbsPosition 	:= 0.0;
			bMaxPositionReached	:= TRUE;
		END_IF
	END_IF

	IF bTestChangeTargetPos
		AND (stAxis4.NcToPlc.ActPos < 1.0)
	THEN
		bMaxPositionReached	:= FALSE;
	END_IF

	IF bSwitchS17
	THEN
		bMaxPositionReached	:= FALSE;
		fMoveAbsPosition	:= 0.0;
	END_IF
	
(* Couple Axis on Handwheel *)
	fbGearIn(
		Execute			:= 	bHandwheelSwitchS28,
		RatioNumerator	:= 	1,
		RatioDenominator:= 	1,
		Acceleration	:= 	,
		Deceleration	:= 	,
		Jerk			:= 	,
		BufferMode		:= 	,
		Options			:= 	,
		Master			:= 	stAxis5,
		Slave			:= 	stAxis4,
		InGear			=> 	bGearInDone,
		Busy			=> 	,
		Active			=> 	,
		CommandAborted	=> 	,
		Error			=> 	,
		ErrorID			=> 	);

(* Axis coupled *)
	bAxisCoupled := stAxis4.Status.Coupled;

(* Uncouple Axis *)
	fbGearOut(
		Execute	:= 	bSwitchS17,
		Options	:= 	,
		Slave	:= 	stAxis4,
		Done	=> 	bGearOutDone,
		Busy	=> 	,
		Error	=> 	,
		ErrorID	=> 	);
			
(* End *)]]></ST>
    </Implementation>
    <LineIds Name="Axis4">
      <LineId Id="3" Count="91" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>